import pandas as pd
import numpy as np
import statsmodels.api as sm
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_percentage_error,mean_squared_error,r2_score
import matplotlib.pyplot as plt
import seaborn as sns
data=pd.read_csv('/content/DS Internship - Modeling - Data.xlsx - Data.csv')
data.head()
data=data.dropna()
x=data.drop(columns=['Sales'])
y=data['Sales']
x=pd.get_dummies(x,drop_first=True)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
x_train_constant=sm.add_constant(x_train)
x_test_constant=sm.add_constant(x_test)
print(x_train_constant.dtypes)
print(y_train.dtypes) 
bool_cols=x_train_constant.select_dtypes(include=['bool']).columns
x_train_constant[bool_cols]=x_train_constant[bool_cols].astype(int)
ols_model=sm.OLS(y_train,x_train_constant).fit()
print(ols_model.summary())
y_prediction=ols_model.predict(x_test_constant)
mape=mean_absolute_percentage_error(y_test,y_prediction)
mse=mean_squared_error(y_test,y_prediction)
r2=r2_score(y_test,y_prediction)
print(f"Model Performance Metrics:\n")
print(f"MAPE: {mape:.4f}")
print(f"MSE: {mse:.4f}")
print(f"R2 Score: {r2:.4f}")



#Model Performance Metrics:

#MAPE: 0.3587
#MSE: 506748593877.0477
#R2 Score: -1.0461




residuals=y_test-y_prediction
plt.figure(figsize=(10,6))
sns.scatterplot(x=y_test,y=residuals)
plt.axhline(0,color='red',linestyle='--')
plt.title('Residual Analysis')
plt.xlabel('Actual Sales')
plt.ylabel('Residuals')
plt.show()
from openpyxl import Workbook
wb=Workbook()
ws=wb.active
ws.title="Model Summary"
ws.append(["Metric","Value"])
ws.append(["MAPE",mape])
ws.append(["MSE",mse])
ws.append(["R2 Score",r2])
summary=ols_model.summary().as_text().split('\n')
ws.append(["---", "---"])
for line in summary:
    ws.append([line])
output_path='/content/model_summary.xlsx'
wb.save(output_path)
print(f"Model summary and performance saved to {output_path}")
